{"mappings":"AAAmBA,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACzBD,SAASC,cAAc,UAEpBC,iBAAiB,SAAUC,GAEhD,SAASA,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,SAC3C,QAGT,IAAK,IAAIQ,EAAI,EAAGA,EAAI,GAAIA,IAGtBV,EAAcU,GACXC,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBZ,QAAiBC,UAEnDY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBZ,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\n\nconst onFormSubmit = addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, 500);\n  })\n}\nfor (let i = 0; i < 10; i++) {\n  //position = amountInput.currentTarget.value;\n  //delay = delayInput.currentTarget.value + stepInput.currentTarget.value;\n  createPromise(i)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["document","querySelector","addEventListener","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","then","console","log","catch"],"version":3,"file":"03-promises.8a458537.js.map"}