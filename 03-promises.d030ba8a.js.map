{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SACjDA,MAITL,EAAKc,iBAAiB,UAAU,SAACC,GAC/BA,EAAIC,iBAGJ,IAFA,IAA+DC,EAAjBF,EAAIG,cAA1CC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAExBC,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,GAAK,EAAG,CAEzC,GADAlB,SAAWkB,EACPjB,EAAMkB,MAAQ,GAAKH,EAAKG,MAAQ,GAAKF,EAAOE,MAAQ,EACtD,OAEFpB,EAAcC,SAAUC,EAAMkB,OAC3BC,MAAK,SAACC,GACLC,EAAA5B,GAAS6B,OAAOC,QAAQH,GACxBI,QAAQC,IAAIL,MAEbM,OAAM,SAACC,GACNN,EAAA5B,GAAS6B,OAAOM,QAAQD,GACxBH,QAAQC,IAAIE,MAEhB3B,EAAM6B,eAAiBd,EAAKc,cAE5BlC,EAAKmC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n  })\n}\n\nform.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const { elements: { delay, step, amount } } = evt.currentTarget;\n  \n  for (let i = 1; i <= amount.value; i += 1) {\n    position = i;\n    if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n      return;\n    }\n    createPromise(position, delay.value)\n      .then((result) => {\n        Notiflix.Notify.success(result);\n        console.log(result);\n      })\n      .catch((error) => {\n        Notiflix.Notify.failure(error);\n        console.log(error)\n      });\n    delay.valueAsNumber += step.valueAsNumber;\n    }\n    form.reset();\n  \n  })"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","i","value","then","result","$parcel$interopDefault","Notify","success","console","log","catch","error","failure","valueAsNumber","reset"],"version":3,"file":"03-promises.d030ba8a.js.map"}