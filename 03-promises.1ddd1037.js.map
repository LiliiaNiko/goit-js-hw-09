{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEmBC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAK3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,SACzCA,MAdIJ,SAASC,cAAc,SAkB/BW,iBAAiB,UAAWC,IAC/BA,EAAIC,iBACJ,MAAQC,UAAUX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IAAaJ,EAAIK,cAClD,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAOG,MAAOD,IAEjCjB,EAAciB,EAAGE,SAASjB,EAAMgB,OAASC,SAASL,EAAKI,QACpDE,MAAMC,IACLC,EAAA1B,GAAS2B,OAAOC,QAAQH,GACxBI,QAAQC,IAAIL,MAEbM,OAAOC,IACNN,EAAA1B,GAAS2B,OAAOM,QAAQD,GACxBH,QAAQC,IAAIE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    //delay = delayInput + stepInput;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n  })\n}\n\nform.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const { elements: { delay, step, amount } } = evt.currentTarget;\n  for (let i = 1; i <= amount.value; i++) {\n         \n    createPromise(i, parseInt(delay.value) + parseInt(step.value))\n      .then((result) => {\n        Notiflix.Notify.success(result);\n        console.log(result)\n  })\n      .catch((error) => {\n        Notiflix.Notify.failure(error);\n        console.log(error)\n      });\n    \n  }\n  \n})\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","elements","step","amount","currentTarget","i","value","parseInt","then","result","$parcel$interopDefault","Notify","success","console","log","catch","error","failure"],"version":3,"file":"03-promises.1ddd1037.js.map"}